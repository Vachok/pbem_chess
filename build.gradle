plugins {
    id 'com.gradle.build-scan' version '1.13.4'
    id 'java'
    id 'application'
    id 'idea'
}
group 'ru.vachok.pbem.chess'
version('0.19')
mainClassName = group + '.StartMePChess'
sourceCompatibility = 1.9
sourceSets {
    main {
        resources {
            srcDirs = ["src/main/java", "src/main/resources"]
            includes = ["**/*.fxml", "**/*.css", "**/*.properties", "**/*.png", "**/*.html", ".sql", "**/*.jar"]
        }
    }
    test {
        resources {
            srcDirs = ["src/test/java", "src/test/resources"]
            includes = ["**/*.fxml", "**/*.css", "**/*.properties", "**/*.png", "**/*.jar"]
        }
    }
}
repositories {
    mavenCentral()
    jcenter()
}
dependencies {
    compile fileTree('lib\\')
    // https://mvnrepository.com/artifact/io.vertx/vertx-rx-java
    compile group: 'io.vertx', name: 'vertx-rx-java', version: '3.5.2'
    // https://mvnrepository.com/artifact/io.vertx/vertx-web-client
    compile group: 'io.vertx', name: 'vertx-web-client', version: '3.5.2'
    // https://mvnrepository.com/artifact/org.mockito/mockito-all
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.8.4'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    // https://mvnrepository.com/artifact/org.testng/testng
    testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-email
    compile group: 'org.apache.commons', name: 'commons-email', version: '1.5'

}
buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}
jar {
    baseName = project.name
    version = project.version
    manifest {
        attributes(
                'Main-Class': mainClassName,
                'JavaFX-Version': 10,
                'Class-Path': configurations.runtime.collect() { 'lib/' + it.name }.join('')
        )
    }
    from configurations.compile.collect() { it.isDirectory() ? it : zipTree(it) }
}
test {
    useTestNG()
    minHeapSize = '256m'
    maxHeapSize = '2048m'
    jvmArgs '-XX:MaxPermSize=512m'
    testLogging.showStandardStreams = true
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }
    failFast = false}

    javadoc{
  /*-encoding "UTF-8" -linkofline -html5 -javafx -nohelp -version -doctitle "Øàõìàòû ïî-email. Old School, but COOL!", -bottom "<a href="https://github.com/Vachok/pbem_chess" target=_blank>GitHub</a>"*/
    }